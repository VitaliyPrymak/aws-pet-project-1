name: deploy backend_redis to ECR

on:
  push:
    branches:
      - main
    paths:
      - 'backend_redis/**'

jobs:
  deploy-redis-to-ECR:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Build and Push Docker Image
        run: |
         SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          docker build -t backend_redis:$SHORT_SHA -f backend_redis/Dockerfile backend_redis
          docker tag backend_redis:$SHORT_SHA ${{ secrets.ECR_REDIS }}:$SHORT_SHA
          docker push ${{ secrets.ECR_REDIS }}:$SHORT_SHA

      - name: Install SSH Client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Configure SSH Key
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" | tr -d '\r' > ~/.ssh/ec2_private_key.pem
          chmod 600 ~/.ssh/ec2_private_key.pem

      - name: Add Host Key to Known Hosts
        run: ssh-keyscan -H ${{ secrets.ELASTIC_IP }} >> ~/.ssh/known_hosts

      - name: Deploy Redis to EC2
        run: |
         # Визначаємо короткий хеш коміта
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)

          # Оновлюємо docker-compose.yml за допомогою yq
          yq eval ".services.backend_redis.image = \"${{ secrets.ECR_REDIS }}:$SHORT_SHA\"" -i docker-compose.yml

          # Копіюємо оновлений docker-compose.yml на віддалений сервер
          scp -o StrictHostKeyChecking=no -i ~/.ssh/ec2_private_key.pem docker-compose.yml ec2-user@${{ secrets.ELASTIC_IP }}:/home/ec2-user/docker-compose.yml

          # Підключаємося до сервера і виконуємо деплой
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2_private_key.pem ec2-user@${{ secrets.ELASTIC_IP }} << EOF
             export SHORT_SHA=$SHORT_SHA
             aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin \084375565192.dkr.ecr.\${{ secrets.AWS_REGION }}.amazonaws.com
             docker pull ${{ secrets.ECR_REDIS }}:$SHORT_SHA
             docker-compose up -d backend_redis
          EOF


